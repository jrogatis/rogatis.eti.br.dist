{"version":3,"sources":["api/imageGallery/cópia de imageGallery.controller.js"],"names":["index","show","create","upsert","patch","destroy","config","update","accessKeyId","secretAccessKey","region","s3","S3","params","Bucket","Delimiter","Prefix","listObjects","err","data","console","log","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","id","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"cópia de imageGallery.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/imageGallery              ->  index\n * POST    /api/imageGallery              ->  create\n * GET     /api/imageGallery/:id          ->  show\n * PUT     /api/imageGallery/:id          ->  upsert\n * PATCH   /api/imageGallery/:id          ->  patch\n * DELETE  /api/imageGallery/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Posts from './posts.model';\nimport AWS from 'aws-sdk';\n\nAWS.config.update({accessKeyId: 'mykey', secretAccessKey: 'mysecret', region: 'global'});\nvar s3 = new AWS.S3();\n\nvar params = { \n Bucket: 'mystore.in',\n Delimiter: '/',\n Prefix: 's/5469b2f5b4292d22522e84e0/ms.files/'\n}\n\ns3.listObjects(params, function (err, data) {\n if(err)throw err;\n console.log(data);\n});\n\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Postss\nexport function index(req, res) {\n  return Posts.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Posts from the DB\nexport function show(req, res) {\n  return Posts.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Posts in the DB\nexport function create(req, res) {\n  return Posts.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Posts in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Posts.findOneAndUpdate({_id: req.params.id}, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Posts in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Posts.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Posts from the DB\nexport function destroy(req, res) {\n  return Posts.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}
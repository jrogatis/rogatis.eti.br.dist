{"version":3,"sources":["api/projects/projects.controller.js"],"names":["index","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","console","log","send","req","find","exec","catch","findById","params","id","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators"],"mappings":"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","file":"projects.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/projects              ->  index\n * POST    /api/projects              ->  create\n * GET     /api/projects/:id          ->  show\n * PUT     /api/projects/:id          ->  upsert\n * PATCH   /api/projects/:id          ->  patch\n * DELETE  /api/projects/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Project from './projects.model';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return err => {\n    console.log(err);\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Project\nexport function index(req, res) {\n  return Project.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Project from the DB\nexport function show(req, res) {\n  return Project.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Project in the DB\nexport function create(req, res) {\n  return Project.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Project in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Project.findOneAndUpdate({_id: req.params.id}, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Project in the DB\nexport function patch(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Project.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Project from the DB\nexport function destroy(req, res) {\n  return Project.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}